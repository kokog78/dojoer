{"version":3,"sources":["src/app.ts","src/environment.ts","src/main.ts","src/resources/index.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {computedFrom} from 'aurelia-framework';\nimport {HttpClient} from 'aurelia-fetch-client';\n\ninterface Counter {\n  key: string;\n  value: number;\n  max: number;\n  percent: number;\n  style: string;\n  class: string\n}\n\nexport class App {\n\n  name: string;\n  maxValue: number = 0;\n  counters: Counter[];\n  client: HttpClient = new HttpClient();\n\n  @computedFrom('name')\n  get isNormalUser(): boolean {\n    return this.name && this.name !== 'admin';\n  }\n\n  @computedFrom('name')\n  get isAdminUser(): boolean {\n    return this.name === 'admin';\n  }\n\n  attached() {\n    this.getMaxValue();\n    this.reload();\n  }\n\n  increment() {\n    this.client.fetch(`/api/counters/${this.name}`, {\n      method: 'put'\n    }).then(response => this.reload());\n  }\n\n  decrement() {\n    this.client.fetch(`/api/counters/${this.name}`, {\n      method: 'delete'\n    }).then(response => this.reload());\n  }\n\n  setMaxValue() {\n    this.client.fetch(`/api/max-counter/${this.maxValue ? this.maxValue : 0}`, {\n      method: 'post'\n    }).then(response => this.reload());\n  }\n\n  getMaxValue() {\n    this.client.fetch('/api/max-counter', {\n      method: 'get'\n    })\n      .then(response => response.json())\n      .then(response => this.maxValue = response);\n  }\n\n  reload() {\n    this.client.fetch('/api/counters', {\n      method: 'get'\n    })\n      .then(response => response.json())\n      .then(response => {\n      this.counters = response;\n      let max: number = 0;\n      for (let counter of this.counters) {\n        if (counter.value > max) {\n          max = counter.value;\n        }\n        if (counter.max > max) {\n          max = counter.max;\n        }\n        if (counter.max <= 0) {\n          counter.class = 'success';\n        } else if (counter.value < counter.max) {\n          counter.class = 'danger';\n        } else if (counter.value === counter.max) {\n          counter.class = 'success';\n        } else if (counter.value > counter.max) {\n          counter.class = 'warning';\n        }\n      }\n      for (let counter of this.counters) {\n        counter.percent = 100.0 * counter.value / max;\n        counter.style = `width: ${counter.percent}%`;\n      }\n    });\n  }\n\n  clear() {\n    this.client.fetch('/api/counters', {\n      method: 'delete'\n    }).then(response => this.reload());\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":".."}